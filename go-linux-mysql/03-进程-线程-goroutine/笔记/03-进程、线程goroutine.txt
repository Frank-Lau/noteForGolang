
并行：借助硬件实现。同一时刻，同时有多个任务在多个cpu上运行。	―― 真正多任务

并发：借助软件实现。借助cpu高速运算能力，快速在多个任务间切换执行。宏观上有多个任务并行执行，微观上串行	―― 假多任务


进程：活动，一个运行起来的程序。占用 系统资源（内存）
   N
   ：
  1
程序：死，可以执行文件（二进制）。只占用磁盘存储。 不使用 系统资源（内存）


虚拟进程地址：

	进程运行后产生 虚拟内存地址空间  ――（0-4G图）推荐图书《计算机硬件及组成原理》机械工业出版社

	MMU：虚拟内存管理单元(cpu内部硬件)： 1.虚拟地址 ―― 物理地址 映射。

					     2.合理化运用碎片内存;实际编程中永远不会使用到物理地址

进程 5 种工作状态：

	初始态、就绪态、运行态、挂起态、终止态。

		挂起态（阻塞态）：等待除cpu以外的其他资源。主动放弃cpu

进程并发：【了解】

	孤儿进程、僵尸进程。

-----------------------------

线程并发：
	进程： 最小分配资源单位(0-4G)。程序要想运行必须要有 进程空间,尽管win不提进程,
    
    但是也一定要有进程空间,有进程才能分配空间,并在空间中创建线程

	线程： 最小执行单位(因为CPU按照 线程 来分配 时间轮片)。 LWP(轻量级进程)

线程同步：

	当多个线程（控制流）访问同一共享资源（数据）时，通常会出现数据混乱， 指定访问顺序。 ―― 线程同步。

	1. 互斥锁：互斥性。―― “建议锁”：不具有强制性。

	2. 读写锁：读共享、写独占。 写锁优先级高(读写同时来的时候写优先,如果读先到,写后到,那么写将不优先)。

-------------------------------
协程： 
	python、Lua、Rust ... 
	
	也叫轻量级线程,微线程、纤程。

	1. 减少调度消耗的系统资源。(进程中的线程是一个函数,当调用函数时会产生栈针,CPU会在进程中的线程栈针上不停地轮换, 

    效率低,而协程则相当于在线程上开辟了多个if分支,满足那个执行哪个,并且不需要重新开辟栈针,不存在轮换的问题,并且最小的

    加锁单位是进程和线程,协程不需要加锁,综上降低消耗)

	2. 不需要消耗系统资源来维护 锁。

	作用：合理利用线程等待期间的时间消耗。执行其他任务，从而提高cpu使用率。
	
--------------------------------

进程、线程、协程 并发总结：

	进程：安全、稳定性(多个进程地址空间独立,互不影响,linux可以直接用进程完成并发,所以市面上大多数服务器都是在Linux

    操作系统下)。

	线程：效率高、开销小。

	协程：充分利用cpu

	手机加工工厂：

		1. 置办生产线。1个工人	―― 1进程。1线程。

		2. 10条生产线。50 个工人	―― 多进程、多线程。

		3. 所有工人、没有任务。 ―― 搬砖、盖楼。 ―― 协程。

---------------------------------

go程：
	创建： 添加“go”在函数调用之前。	

	结合 线程 和 协程优点产生。

	go程并发：goroutine 和 channel。

go程运行状态：

	初始态、就绪态、运行态、挂起态、终止态。

go程的特性：

	主go程结束。默认会释放进程地址空间。――> 所有的子go程自动结束。

争夺CPU:
        主go程与子go程是站在同一起跑线上同时争夺CPU, 主go程 有 95% 的概率率先争夺到CPU, 子go程 有 5% 的概率率先争夺到CPU

    (APUE书上经过上千万次的线程实验得出(不是用go程做实验),不具备理论依据)


练习：实现一个实名go程、一个匿名go程、一个主go程。


runtime包:

	Gosched():

		主动出让当前cpu使用权一次。给其他go程执行增加获取cpu的机会。

	Goexit():

		将调用该函数的 go程退出。执行之前注册成功的 defer函数。

	return ： 
		返回当前函数调用。（返回到调用者那里去）执行之前注册成功的 defer函数。

	os.Exit(int):

		结束当前进程。不 执行之前注册成功的 defer函数。

	GOMAXPROCS():

		设置参与运算的cpu个数。 返回上次设置的结果。 初次设置，返回默认逻辑cpu个数。

	

	

	
	
	




















